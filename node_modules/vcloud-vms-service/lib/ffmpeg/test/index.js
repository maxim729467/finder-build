const fs = require('fs');
const path = require('path');
const express = require('express');
const bodyParser = require('body-parser');
const app = express();
const cors = require('cors');
const FFmpegStream = require('..');
const execSync = require('child_process').execSync;

app.use(cors());
app.use(
  bodyParser.urlencoded({
    extended: true,
  }),
);
app.use(bodyParser.json());

app.get('/index', (req, res) => {
  res.sendFile(path.join(__dirname + '/index.html'))
});

app.use('/stream', express.static(path.join(__dirname, 'archive')));

let stream = new FFmpegStream({ id: 1 });

app.get('/start', (req, res) => {
  // const url = 'rtsp://admin:admin@195.138.65.68:556/ch01/0';
  const url = 'rtsp://195.138.65.68:1554/1/h264major';
  // const url = '123123';
  const folderPath = `${__dirname}/archive`;
  stream.ffmpegStart({ url, folderPath, onError: console.log });
  res.send({ message: 'file has been converted successfuly' });
});

app.get('/stop', (req, res) => {
  stream.ffmpegStop();
  res.send({ message: 'stop success' });
});

app.get('/killAllFFmpegProcess', async (req, res) => {
  try {
    await execSync('killall -KILL ffmpeg');
    res.send({ message: 'killAllFFmpegProcess success' });
  } catch (err) {
    res.send({ message: 'killAllFFmpegProcess failed', err });
  }
});

app.get('/getStreamUrl', (req, res) => {
  const url = 'http://127.0.0.1:4440/stream/output.m3u8';
  res.send({ url });
});

app.get('/clearDir', (req, res) => {
  stream.ffmpegStop();
  const dir = `${__dirname}/archive`;
  fs.readdir(dir, (err, files) => {
    if (err) throw err;

    for (const file of files) {
      fs.unlink(path.join(dir, file), err => {
        if (err) throw err;
      });
    }
  });

  res.send({ message: 'clear success' });
});

app.get('/*', (req, res) => {
  console.log('start stream');
  const filePath = __dirname + req.url;
  // const filePath = `${__dirname}/archive/output.m3u8`;
  fs.readFile(filePath, (error, content) => {
    const type = filePath.split('.').pop();
    console.log('read file stream');
    if (error) return res.send({ error: error });
    if(type === 'm3u8'){
      res.contentType('application/x-mpegURL')
    }
    if(type === 'ts'){
      res.contentType('video/MP2T')
    }

    res.end(content);
  });
});

app.listen(4440, () => {
  console.log(`Server listening on port 4440.`);
});
